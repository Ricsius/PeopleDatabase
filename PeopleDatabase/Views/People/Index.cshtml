@model IEnumerable<PersonResponse>
@{
    ViewBag.Title = "People";
}

<h1>People</h1>

<form action="~/people/index" method="get">
    <div class="box flex">
        <div class="flex-1">
            <select class="form-input" name="searchBy">
                @foreach (KeyValuePair<string, string> field in ViewBag.SearchFields)
                {
                    if (field.Key == ViewBag.SearchBy)
                    {
                        <option value="@field.Key" selected>@field.Value</option>
                    }
                    else
                    {
                        <option value="@field.Key">@field.Value</option>
                    }
                }
            </select>
        </div>

        <div class="flex-1">
            <input type="search" class="form-input" name="searchString" placeholder="Search" value="@ViewBag.SearchString" />
        </div>

        <div class="flex-1">
            <button class="button button-blue-back">Search</button>
            <a href="~/people/index" class="link-hover">Clear all</a>
        </div>
    </div>
</form>

<table class="table w-100 mt">
    <thead>
        <tr>
            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
                { "ColumnName", nameof(PersonResponse.Name) },
                { "DisplayName", "Name" },
            })

            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
                { "ColumnName", nameof(PersonResponse.Email) },
                { "DisplayName", "Email" },
            })

            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
                { "ColumnName", nameof(PersonResponse.DateOfBirth) },
                { "DisplayName", "Date of Birth" },
            })

            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
                { "ColumnName", nameof(PersonResponse.Age) },
                { "DisplayName", "Age" },
            })

            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
                { "ColumnName", nameof(PersonResponse.Gender) },
                { "DisplayName", "Gender" },
            })

            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
                { "ColumnName", nameof(PersonResponse.CountryName) },
                { "DisplayName", "Country" },
            })

            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
                { "ColumnName", nameof(PersonResponse.Address) },
                { "DisplayName", "Address" },
            })

            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
                { "ColumnName", nameof(PersonResponse.ReceiveNewsLetters) },
                { "DisplayName", "Receive News Letters" },
            })
        </tr>
    </thead>

    <tbody>
        @foreach (PersonResponse person in Model)
        {
            <tr>
                <td style="width:15%">@person.Name</td>
                <td style="width:20%">@person.Email</td>
                <td style="width:13%">@person.DateOfBirth.ToString("yyyy-MMMM-dd")</td>
                <td style="width:9%">@person.Age</td>
                <td style="width:9%">@person.Gender</td>
                <td style="width:15%">@person.CountryName</td>
                <td style="width:15%">@person.Address</td>

                @if (person.ReceiveNewsLetters)
                {
                    <td style="width:15%">Yes</td>
                }
                else
                {
                    <td style="width:15%">No</td>
                }

            </tr>
        }
    </tbody>
</table>
